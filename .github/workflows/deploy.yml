name: Deploy to AWS using Terraform & Ansible

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.11.2

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

            - name: Install Terraform
        run: |
          curl -O https://releases.hashicorp.com/terraform/${{ env.TF_VERSION }}/terraform_${{ env.TF_VERSION }}_linux_amd64.zip
          rm -f terraform  # Only remove if 'terraform' is a file, not a directory
          unzip -o terraform_${{ env.TF_VERSION }}_linux_amd64.zip
          sudo mv terraform /usr/local/bin/  # Move to a system-wide location
          chmod +x /usr/local/bin/terraform  # Ensure Terraform is executable
          echo "Terraform installed successfully!"
          terraform -version


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Initialize Terraform
        working-directory: terraform
        run: terraform init

      - name: Validate Terraform
        working-directory: terraform
        run: terraform validate

      - name: Apply Terraform
        working-directory: terraform
        run: terraform apply -auto-approve

      - name: Get EC2 Public IP
        id: ec2_ip
        run: |
          echo "EC2_IP=$(aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' --output text)" >> $GITHUB_ENV

  ansible:
    name: Configure EC2 with Ansible
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Ansible
        run: |
          sudo apt update -y
          sudo apt install -y ansible
          ansible --version

      - name: Set Up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/labsuser.pem
          chmod 400 ~/.ssh/labsuser.pem

      - name: Update Ansible Inventory
        run: |
          echo "[webserver]" > ansible/inventory.ini
          echo "${{ env.EC2_IP }} ansible_user=ec2-user ansible_ssh_private_key_file=~/.ssh/labsuser.pem" >> ansible/inventory.ini

      - name: Run Ansible Playbook
        run: ansible-playbook -i ansible/inventory.ini ansible/install_docker.yml
